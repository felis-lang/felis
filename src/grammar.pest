WHITESPACE = _{ " " | "\n" | "\t" }
COMMENT = _{ "//" ~ (!("\n") ~ ANY)* }

alpha = _{ 'a'..'z' | 'A'..'Z' }
digit = _{ '0'..'9' }

number = @{ digit+ }
string = @{ "\"" ~ (!("\"") ~ ANY)* ~ "\"" }
boolean = _{ tru | fls }
  tru = _{ "true" }
  fls = _{ "false" }

ident = @{ (alpha | "_") ~ (alpha | digit | "_")* }

main = _{ SOI ~ stmt* ~ EOI }

stmt = _{ stmt_valbind | stmt_expr /* | typebind */ }

stmt_expr = { expr ~ ";" }

stmt_valbind = { "let" ~ pattern ~ type_anno ~ "=" ~ expr ~ ";" }

pattern = _{ ident | patt_tuple }

patt_tuple = { "(" ~ pattern ~ ("," ~ pattern)* ~ ")" }

type_anno = { (":" ~ type)? }

val_atom = _{ prefix* ~ (number | string | boolean | func | ident | tuple) ~ suffix* }

expr = { val_atom ~ (infix ~ val_atom)* }

func = { "fn" ~ pattern ~ "->" ~ expr }

tuple = { "(" ~ expr ~ ("," ~ expr)* ~ ")" }

prefix = _{ neg }
  neg = { "-" }

suffix = _{ call }
  call = { tuple }

infix = _{ add | sub | pow | mul | div | arrow }
  add = { "+" }
  sub = { "-" }
  pow = { "**" }
  mul = { "*" }
  div = { "/" }
  arrow = { "->" }

type = { type_atom ~ (infix ~ type_atom)* }

type_atom = { ident | "(" ~ type ~ ")" }
