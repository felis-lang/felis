WHITESPACE = _{ " " | "\n" | "\t" }
COMMENT = _{ "//" ~ (!("\n") ~ ANY)* }

alpha = _{ 'a'..'z' | 'A'..'Z' }
digit = _{ '0'..'9' }

number = @{ digit+ }
string = @{ "\"" ~ (!("\"") ~ ANY)* ~ "\"" }
boolean = _{ tru | fls }
  tru = _{ "true" }
  fls = _{ "false" }

ident = @{ (alpha | "_") ~ (alpha | digit | "_")* }

main = _{ SOI ~ stmt* ~ EOI }

stmt = _{ stmt_valbind | stmt_tybind | stmt_expr }

stmt_expr = { val_expr ~ ";" }

stmt_valbind = { "let" ~ patt ~ "=" ~ val_expr ~ ";" }

stmt_tybind = { "type" ~ ident ~ "=" ~ type_expr ~ ";" }

patt = _{ patt_ident | patt_tuple }

patt_ident = { ident ~ (":" ~ type_expr)? }

patt_tuple = { "(" ~ patt ~ ("," ~ patt)* ~ ")" }

val_atom = _{ prefix* ~ (number | string | boolean | func | ident | val_tuple) ~ suffix* }

val_tuple = { "(" ~ val_expr ~ ("," ~ val_expr)* ~ ")" }

val_expr = { val_atom ~ (val_infix ~ val_atom)* }

func = { "fn" ~ patt_tuple ~ "->" ~ val_expr }

prefix = _{ neg }
  neg = { "-" }

suffix = _{ call }
  call = { val_tuple }

val_infix = _{ add | sub | pow | mul | div }
  add = { "+" }
  sub = { "-" }
  pow = { "**" }
  mul = { "*" }
  div = { "/" }

type_expr = { type_atom ~ (type_infix ~ type_atom)* }

type_infix = _{ arrow }
  arrow = { "->" }

type_atom = _{ ident | type_tuple }

type_tuple = { "(" ~ type_expr ~ ("," ~ type_expr)* ~ ")" }
